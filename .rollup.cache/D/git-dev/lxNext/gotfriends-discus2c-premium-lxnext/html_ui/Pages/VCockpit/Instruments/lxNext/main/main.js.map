{"version":3,"file":"main.js","sourceRoot":"","sources":["../../../../../../../src/main/main.tsx"],"names":[],"mappings":"AAAA,4EAA4E;AAC5E,yDAAyD;AAEzD,OAAO,eAAe,CAAC;AAEvB,OAAO,EAAE,WAAW,EAAW,QAAQ,EAAE,MAAM,qBAAqB,CAAC;AACrE,OAAO,EAAE,WAAW,EAAE,MAAM,0BAA0B,CAAC;AACvD,OAAO,EAAE,KAAK,EAAY,MAAM,QAAQ,CAAC;AAEzC,MAAM,MAAO,SAAQ,cAAc;IAC/B;QACE,KAAK,EAAE,CAAC;QAGO,aAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QACnC,aAAQ,GAAG,QAAQ,CAAC;IAH5B,CAAC;IAKD,IAAI,UAAU;QACZ,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED,IAAI,aAAa;QACf,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,iBAAiB;QACpB,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAE1B,MAAM,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAC,aAAa,CAAgB,CAAC;QAExE,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,EAAE;YACzC,CAAC,CAAC,cAAc,EAAE,CAAC;YACnB,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,UAAU,CAAC,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC;QAC1C,CAAC,CAAC,CAAA;QAEF,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAY,CAAC,GAAG,CAAC,aAAa,EAAE,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;QAExG,WAAW,CAAC,MAAM,CAAC,2BAAC,WAAW,IAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE,oBAAoB,EAAE,QAAQ,EAAE,KAAK,CAAC,KAAK,EAAE,SAAS,EAAE,EAAE,GAAI,EAAE,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC,CAAC;QACpK,WAAW,CAAC,MAAM,CAAC,2BAAC,WAAW,IAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,KAAK,CAAC,QAAQ,EAAE,SAAS,EAAE,EAAE,GAAI,EAAE,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC,CAAC;IAC/J,CAAC;IAEI,oBAAoB;QACvB,KAAK,CAAC,oBAAoB,EAAE,CAAC;IACjC,CAAC;IAEM,MAAM;QACT,KAAK,CAAC,MAAM,EAAE,CAAC;QAEf,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAY,CAAC,GAAG,CAAC,oBAAoB,EAAE,MAAM,CAAC,cAAc,CAAC,oBAAoB,EAAE,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC1I,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAY,CAAC,GAAG,CAAC,UAAU,EAAE,MAAM,CAAC,cAAc,CAAC,oBAAoB,EAAE,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACvI,CAAC;IAEO,WAAW;QACf,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,KAAK,UAAU,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC;QACrE,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAY,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC7E,CAAC;CACJ;AAED,kBAAkB,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC","sourcesContent":["/// <reference types=\"@microsoft/msfs-types/Pages/VCockpit/Core/VCockpit\" />\r\n/// <reference types=\"@microsoft/msfs-types/JS/SimVar\" />\r\n\r\nimport './styles.scss';\r\n\r\nimport { FSComponent, Subject, EventBus } from '@microsoft/msfs-sdk';\r\nimport { MyComponent } from './components/myComponent';\r\nimport { Units, FSEvents } from './vars';\r\n\r\nclass lxnext extends BaseInstrument {\r\n    constructor() {\r\n      super();\r\n    }\r\n\r\n    private readonly eventBus = new EventBus();\r\n    private unittype = 'metric';\r\n\r\n    get templateID(): string {\r\n      return 'lxnext';\r\n    }\r\n\r\n    get isInteractive() {\r\n      return true;\r\n    }  \r\n\r\n    public connectedCallback(): void {\r\n        super.connectedCallback();\r\n\r\n        const unitswitch = document.querySelector('#unitswitch') as HTMLElement;\r\n\r\n        unitswitch.addEventListener('click', (e) => {\r\n          e.preventDefault();\r\n          this.toggleUnits();\r\n          unitswitch.innerHTML = Units.speed.pref;\r\n        })\r\n\r\n        this.eventBus.getPublisher<FSEvents>().pub('masterunits', Units.speed.imperial ? \"metric\" : \"imperial\");\r\n      \r\n        FSComponent.render(<MyComponent bus={this.eventBus} variable={'indicated_airspeed'} unittype={Units.speed} threshold={20} />, document.getElementById('mainframe'));\r\n        FSComponent.render(<MyComponent bus={this.eventBus} variable={'altitude'} unittype={Units.altitude} threshold={20} />, document.getElementById('mainframe'));\r\n      }\r\n\r\n    public disconnectedCallback(): void {\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    public Update(): void {\r\n        super.Update();\r\n        \r\n        this.eventBus.getPublisher<FSEvents>().pub('indicated_airspeed', SimVar.GetSimVarValue('AIRSPEED INDICATED', Units.speed[this.unittype]));\r\n        this.eventBus.getPublisher<FSEvents>().pub('altitude', SimVar.GetSimVarValue('INDICATED ALTITUDE', Units.altitude[this.unittype]));\r\n    }\r\n\r\n    private toggleUnits(): void {\r\n        this.unittype = this.unittype === \"imperial\" ? \"metric\" : \"imperial\";\r\n        this.eventBus.getPublisher<FSEvents>().pub('masterunits', this.unittype);\r\n    }\r\n}\r\n  \r\nregisterInstrument('lx-next', lxnext);"]}